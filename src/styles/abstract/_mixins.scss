@use 'sass:math';
// @mixin container {
// 	padding: 0 rem(45);
// 	@include respond-above(720px) {
// 		padding: 0 rem(55);
// 	}

// 	@include respond-above(1280px) {
// 		padding: 0 rem(180);
// 	}

// 	@include respond-above(1920px) {
// 		padding: 0 rem(280);
// 	}

// 	@include respond-above(2560px) {
// 		padding: 0 rem(300);
// 	}
// }

// @mixin makeStatic {
// 	@include respond-above(1280px) {
// 		max-width: 1280px;
// 		margin: 0 auto;
// 	}

// 	@include respond-above(1920px) {
// 		max-width: 1920px;
// 		margin: 0 auto;
// 	}

// 	@include respond-above(2560px) {
// 		max-width: 2560px;
// 		margin: 0 auto;
// 	}
// }

@mixin respond-above($breakpoint) {
	@media only screen and (min-width: $breakpoint) {
		@content;
	}
}

@mixin respond-below($breakpoint) {
	@media only screen and (max-width: $breakpoint) {
		@content;
	}
}
@mixin distribute-on-circle($nb-items, $circle-size, $item-size) {
	$half-item: math.div($item-size, 2);
	$half-parent: math.div($circle-size, 2);

	position: relative;
	width: $circle-size;
	height: $circle-size;
	padding: 0;
	border-radius: 50%;
	list-style: none;
	box-sizing: content-box;

	> * {
		display: block;
		position: absolute;
		top: 50%;
		left: 50%;
		width: $item-size;
		height: $item-size;
		margin: -$half-item;
	}

	$angle: math.div(-180, $nb-items);
	$rot: 165;

	@for $i from 1 through $nb-items {
		> :nth-of-type(#{$i}) {
			transform: rotate($rot * 1deg)
				translate($half-parent - 3)
				rotate($rot * -1deg);
		}

		$rot: ($rot + $angle);
	}
}
